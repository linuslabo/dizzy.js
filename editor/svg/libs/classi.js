this.container=$("svg");this.groupList=[];this.activeGroupNumber=0;this.options={transformDuration:1E3};this.WIDTH=2E3;this.HEIGHT=1500;load();printGroupList();$(document).bind("keydown.presentation.navigation",function(b){b.which===32||b.which===39?(console.log("premuta freccia avanti"),next()):b.which===37&&(console.log("premuta freccia indietro"),previous())});
function load(){var b=this;this.canvas=$("#canvas");this.canvas.find("g").each(function(){b.getGroup($(this))});console.log("caricati i gruppi esistenti");$(window).bind("resize",function(){this.$svg=$("svg");this.$svg.attr({width:window.innerWidth,height:window.innerHeight});this.$svg.attr("style",'width="'+window.innerWidth+'" height="'+window.innerHeight+'"')});$(window).resize();console.log("impostate le corrette dimensioni dello schermo")}
function printGroupList(){console.log(this.groupList)}function createGroup(){var b=this.getGroup(0),a=$(this.svg.group(b.dom())),b=Transformation.createTransform(b.transformation().matrix().inverse());a.addClass("group");a=new Group(a);a.transformation(b);this.groupList.push(a);return a}
function removeGroup(b){for(var a=b.dom().attr("id"),c=0;c<this.groupList.length;c++)if(this.groupList[c].dom().attr("id")==a){b.dom().remove();this.groupList.splice(c,1);console.log("Group "+a+" removed!");break}}
function findGroup(b){console.log("sono in findGroup");for(var a=0;a<this.groupList.length;++a)if(this.groupList[a]&&this.groupList[a].dom().attr("id")===$(b).attr("id"))return console.log("fondgroup trovato al "+a+" posto della lista"),this.groupList[a];var c,b=jQuery(b);b.size()>0&&(c=new Group(b[0]),this.groupList.push(c));console.log("esco da findGroup");return c}
function findGroupById(b){for(var a=0;a<this.groupList.length;++a)if(this.groupList[a]&&this.groupList[a].dom().attr("id")===b)return this.groupList[a]}
function getGroup(b){console.log("sono in getGroup");if(b.dom&&b.transformation)return console.log("esco da getGroup: \u00e8 gi\u00e0 un gruppo!"),b;var a;if(b>0)a=this.canvas.find(".group_"+b),console.log("cercando per .group_ ho trovato:"),console.log(a);else if(b===0)a=this.canvas;b=this.findGroup(a||b);console.log("esco da getGroup");return b}function gotoGroup(b,a){typeof b!=="number"&&(b=this.getGroup(b));this.activeGroupNumber=b;this.current(a)}function next(){this.step(1)}
function previous(){this.activeGroupNumber!=0&&this.step(-1)}function step(b){this.activeGroupNumber+=b;try{this.current()}catch(a){this.activeGroupNumber-=b}}function visitGroup(b){for(var a,c=0;c<this.groupList.length;++c)if(this.groupList[c]&&this.groupList[c].dom().attr("id")===b){a=this.groupList[c];break}this.transformCanvasTo(a)}
function transformCanvasTo(b,a){console.log("sono in transformCanvasTo, il canvas \u00e8:");var c=this.getGroup(0);console.log(c);if(b!==void 0)try{console.log("il gruppo scelto \u00e8 definito");var d=b.transform;console.log("La trasformazione del gruppo:");d==void 0&&console.log("\u00e8 undefined");console.log(d);var f=Transformation.createTransform(d.matrix());console.log("la trasformazione equivalente a quella del gruppo:");console.log(f);f.inverse();console.log("group transf: "+d);console.log("inver transf: "+
f);if(b.dom().attr("id")!="canvas"){console.log("il gruppo scelto non \u00e8 il canvas");var e=b.dom().children().first(),k=e.prop("localName");if(k=="rect"||k=="image"||k=="ellipse"||k=="line"||k=="text"){var i,j,h,g;switch(k){case "rect":i=e.attr("x");j=e.attr("y");h=e.attr("width");g=e.attr("height");break;case "image":i=e.attr("x");j=e.attr("y");h=e.attr("width");g=e.attr("height");h=h.substring(0,h.length-2);g=g.substring(0,g.length-2);break;case "ellipse":i=e.attr("cx")-e.attr("rx");j=e.attr("cy")-
e.attr("ry");h=e.attr("rx")*2;g=e.attr("ry")*2;break;case "line":i=e.attr("x1");j=e.attr("y1");h=Math.abs(i-e.attr("x2"));g=Math.abs(j-e.attr("y2"));break;case "text":var l=e[0].getBBox();i=l.x;j=l.y;h=l.width;g=l.height}var p=window.innerWidth,q=window.innerHeight,s=$("svg").attr("viewBox").split(" ",4),t=s[2],u=s[3],m,n;p/q>=4/3?(n=u,m=u/q*p):(m=t,n=t/p*q);var v=e.parent().attr("zoom"),d=v?v:100;d/=100;var r=Math.min(m*d/h,n*d/g),w=f.matrix();f.multiply(w.inverse()).translate(-i,-j).multiply(w);
var x=f.matrix();f.multiply(x.inverse()).scale(r).multiply(x);i=(m-h*r)/2;g=(n-g*r)/2;var y=f.matrix();f.multiply(y.inverse()).translate(i,g).multiply(y);console.log("final transform: "+f);var o=e.parent().attr("speed"),o=o?o:1,a=$.extend({duration:parseInt(o*1E3)},a);this.transform(c,f,a);console.log("trasformazione e animazione effettuate")}}else console.log("il gruppo scelto \u00e8 il canvas!"),this.transform(c,f,a)}catch(z){console.log("errore tranformCanvasTo: "+z.message)}else throw console.log("group is undefined D:"),
"Ops! This should not have happened! (o:";}function current(b){console.log("sono in current");var a=this.getGroup(0);console.log("Canvas:");console.log(a);a=this.getGroup(this.activeGroupNumber);console.log("Gruppo trovato:");console.log(a);this.transformCanvasTo(a,b);console.log("ho trasformato il canvas")}
function transform(b,a,c){try{var c=$.extend({complete:function(){},duration:this.options.transformDuration},c),d=c.duration===void 0?this.options.transformDuration:c.duration;b.transform=a;d<=10?$(b.dom(),this.$svg).attr("transform",a.toString()):$(b.dom(),this.$svg).animate({svgTransform:a.toString()},c);console.log("animazione effettuata")}catch(f){console.log("errore transform: "+f.message)}}
function toViewboxCoordinates(b,a){var c=this.svg.root().createSVGPoint();c.x=b.x;c.y=b.y;var d=this.svg.root().getScreenCTM();a||(d=d.inverse());return c=c.matrixTransform(d)}function toCanvasCoordinates(b,a){var c=this.svg.root().createSVGPoint();c.x=b.x;c.y=b.y;var d=this.svg.root().getScreenCTM(),f=this.getGroup(0).transformation().matrix(),d=d.multiply(f);a||(d=d.inverse());return c=c.matrixTransform(d)}
function vectorTranslate(b,a){var a=a||{},a=$.extend({ignoreCanvas:!1,targetNode:void 0,inverseMatrix:!1},a),c=this.svg.root().createSVGPoint();c.x=b.x;c.y=b.y;var d;if(a.targetNode)d=a.targetNode.getCTM().inverse();else{d=this.svg.root().getScreenCTM();var f=this.getGroup(0).transformation().matrix();if(!a.ignoreCanvas)d=d.multiply(f),a.inverseMatrix=!0;a.inverseMatrix&&(d=d.inverse())}c=c.matrixTransform(d);return{x:c.x,y:c.y}}
function Group(b,a){this.dom=function(a){return a===void 0?this.domContent:(this.domContent=$(a),this)};this.numbers=function(){return this.numbers};this.transformation=function(a){console.log("sono in group.transformation, la trasf da settare \u00e8:");console.log(a);return a===void 0?(console.log("la trasformazione da settare \u00e8 undefined, quindi restituisco la corrente, che \u00e8:"),console.log(this.transform),this.transform):(this.transform=a,$(this.dom()).attr("transform",a.toString()),
this)};var c=/group_(\d+)/g;if(b.inverse&&b.multiply){this.transformation(b);if(a!==void 0)this.numbers=a;this.dom($('<g class="group" transform="'+this.transformation()+'" />'))}else{var d=b[0]||b,f=$(d);this.numbers=a||[];for(var f=f.attr("class"),e;(e=c.exec(f))!==null;)this.numbers.push(parseInt(e[1]));c=d.parentNode.getTransformToElement(d);this.dom(d);this.transform=new Transformation(c);this.transform.inverse()}this.dom().attr("id")===void 0&&this.dom().attr("id","g"+Math.random())}
function Transformation(b){this.transformationMatrix=b;this.matrix=function(a){if(a!==void 0)this.transformationMatrix=a;else return this.transformationMatrix};this.rotate=function(a,b,d){arguments.length<3&&(d=b=0);this.matrix(this.matrix().translate(b,d).rotate(a).translate(-b,-d));return this};this.scale=function(a){this.matrix(this.matrix().scale(a));return this};this.translate=function(a,b){this.matrix(this.matrix().translate(a,b));return this};this.inverse=function(){this.matrix(this.matrix().inverse());
return this};this.multiply=function(a){a=a.transformationMatrix||a;this.matrix(this.matrix().multiply(a));return this};this.toString=function(){return"matrix("+this.toArray().join(", ")+")"};this.toArray=function(){var a=this.matrix();return[a.a,a.b,a.c,a.d,a.e,a.f]}}Transformation.createTransform=function(b){b.dom&&b.transformation&&(b=b.transformation());if(b.transformationMatrix)b=b.transformationMatrix;b.getCTM&&(b=b.getCTM());if(b.toString().indexOf("SVGMatrix")>=0)return new Transformation(b)};